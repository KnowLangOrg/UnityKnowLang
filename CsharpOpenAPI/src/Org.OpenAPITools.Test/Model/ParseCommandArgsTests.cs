/*
 * KnowLang API
 *
 * A FastAPI server for the KnowLang project, providing endpoints for all KnowLang features.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing ParseCommandArgs
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ParseCommandArgsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ParseCommandArgs
        //private ParseCommandArgs instance;

        public ParseCommandArgsTests()
        {
            // TODO uncomment below to create an instance of ParseCommandArgs
            //instance = new ParseCommandArgs();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ParseCommandArgs
        /// </summary>
        [Fact]
        public void ParseCommandArgsInstanceTest()
        {
            // TODO uncomment below to test "IsType" ParseCommandArgs
            //Assert.IsType<ParseCommandArgs>(instance);
        }

        /// <summary>
        /// Test the property 'Path'
        /// </summary>
        [Fact]
        public void PathTest()
        {
            // TODO unit test for the property 'Path'
        }

        /// <summary>
        /// Test the property 'Output'
        /// </summary>
        [Fact]
        public void OutputTest()
        {
            // TODO unit test for the property 'Output'
        }

        /// <summary>
        /// Test the property 'Command'
        /// </summary>
        [Fact]
        public void CommandTest()
        {
            // TODO unit test for the property 'Command'
        }

        /// <summary>
        /// Test the property 'ExtraFields'
        /// </summary>
        [Fact]
        public void ExtraFieldsTest()
        {
            // TODO unit test for the property 'ExtraFields'
        }

        /// <summary>
        /// Test the property 'Verbose'
        /// </summary>
        [Fact]
        public void VerboseTest()
        {
            // TODO unit test for the property 'Verbose'
        }

        /// <summary>
        /// Test the property 'Config'
        /// </summary>
        [Fact]
        public void ConfigTest()
        {
            // TODO unit test for the property 'Config'
        }
    }
}
